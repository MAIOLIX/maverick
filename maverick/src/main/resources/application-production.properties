# Configurazione Produzione Maverick Platform
# Per uso in container con PostgreSQL e MinIO esterni

# ====================================
# LOGGING CONFIGURATION
# ====================================
logging.level.root=INFO
logging.level.com.maiolix.maverick=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ====================================
# DATABASE POSTGRESQL (ESTERNO)
# ====================================
# URL del database PostgreSQL (configurabile via environment)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/maverick}
spring.datasource.username=${DATABASE_USER:maverick}
spring.datasource.password=${DATABASE_PASSWORD:maverick}
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool di connessioni ottimizzato per produzione
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ====================================
# STORAGE CONFIGURATION
# ====================================
# Provider di storage (configurabile via environment)
maverick.storage.provider=${STORAGE_PROVIDER:minio}

# ====================================
# MINIO STORAGE (ESTERNO)
# ====================================
# Configurazione MinIO esterna - utilizzabile con variabili d'ambiente
maverick.storage.minio.endpoint=${MINIO_ENDPOINT:http://localhost:9000}
maverick.storage.minio.access-key=${MINIO_ACCESS_KEY:minioadmin}
maverick.storage.minio.secret-key=${MINIO_SECRET_KEY:minioadmin}
maverick.storage.minio.default-bucket=${MINIO_BUCKET:maverick-models}
maverick.storage.minio.use-ssl=${MINIO_USE_SSL:false}
maverick.storage.minio.connection-timeout=10000
maverick.storage.minio.read-timeout=10000
maverick.storage.minio.write-timeout=10000
maverick.storage.minio.max-connections=100
maverick.storage.minio.path-style-access=true

# ====================================
# SECURITY & JWT
# ====================================
# Configurazione JWT
maverick.jwt.secret=${JWT_SECRET:your-secret-key-change-this-in-production}
maverick.jwt.expiration=${JWT_EXPIRATION:86400000}
maverick.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# CORS per API esterne (configurabile)
maverick.cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:8080}
maverick.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
maverick.cors.allowed-headers=*
maverick.cors.allow-credentials=true

# ====================================
# SERVER CONFIGURATION
# ====================================
server.port=${PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:/}

# Configurazione server per produzione
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# ====================================
# ACTUATOR (HEALTH CHECK & MONITORING)
# ====================================
# Endpoints esposti (sicurezza per produzione)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always

# Health checks specifici (disabilitati temporaneamente se problematici)
management.health.db.enabled=${HEALTH_CHECK_DB_ENABLED:true}
management.health.diskspace.enabled=true
management.health.ping.enabled=true

# Disabilita health check MinIO se causa problemi di startup
# management.health.minio.enabled=false

# Info endpoint
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true

# Sicurezza per actuator
management.endpoints.web.cors.allowed-origins=${CORS_ORIGINS:*}
management.endpoints.web.cors.allowed-methods=GET,POST
management.endpoints.web.cors.allowed-headers=*

# ====================================
# UPLOAD CONFIGURATION
# ====================================
# Dimensioni file
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:100MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:100MB}

# Directory uploads locali (backup)
maverick.upload.local-path=${UPLOAD_PATH:/app/uploads}

# ====================================
# PERFORMANCE TUNING
# ====================================
# Thread pool
server.tomcat.threads.min-spare=10
server.tomcat.threads.max=200
server.tomcat.max-connections=8192
server.tomcat.accept-count=100

# Connection keep-alive
server.tomcat.connection-timeout=20000
server.tomcat.keep-alive-timeout=20000

# ====================================
# LOGGING
# ====================================
logging.file.path=/app/logs
logging.file.name=maverick.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.total-size-cap=100MB
logging.logback.rollingpolicy.max-history=30
